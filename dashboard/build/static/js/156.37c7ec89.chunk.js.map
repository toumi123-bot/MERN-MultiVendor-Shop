{"version":3,"file":"static/js/156.37c7ec89.chunk.js","mappings":"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","sources":["views/seller/OrderDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { decreaseProductStock, get_seller_order,increaseProductStock,messageClear, seller_order_status_update } from '../../store/Reducers/OrderReducer';\r\nimport toast from 'react-hot-toast';\r\nconst OrderDetails = () => {\r\n    const { orderId } = useParams() \r\n    const dispatch = useDispatch() \r\n    const [status, setStatus] = useState('')\r\n    const { order,errorMessage,successMessage } = useSelector(state => state.order)\r\n\r\n    useEffect(() => {\r\n        setStatus(order?.delivery_status)\r\n    },[order])\r\n    useEffect(() => {\r\n        dispatch(get_seller_order(orderId))\r\n    },[orderId])\r\n\r\n\r\n       const status_update = (e) => {\r\n        const newStatus = e.target.value;\r\n        dispatch(seller_order_status_update({ orderId, info: { status: newStatus } }));\r\n        setStatus(newStatus);\r\n    \r\n        \r\n    };\r\n    \r\n    \r\n    \r\n    useEffect(() => { \r\n        if (successMessage) {\r\n            toast.success(successMessage)\r\n            dispatch(messageClear())  \r\n        } \r\n        if (errorMessage) {\r\n            toast.error(errorMessage)\r\n            dispatch(messageClear())  \r\n        } \r\n    },[successMessage,errorMessage])\r\n    return (\r\n        <div className='px-2 lg:px-7 pt-5'>\r\n        <div className='w-full p-4 bg-[#6a5fdf] rounded-md'>\r\n            <div className='flex justify-between items-center p-4'>\r\n                <h2 className='text-xl text-[#d0d2d6]'>Order Details</h2>\r\n                <select onChange={status_update} value={status} name=\"\" id=\"\" className='px-4 py-2 focus:border-indigo-500 outline-none bg-[#475569] border border-slate-700 rounded-md text-[#d0d2d6]'>\r\n                <option value=\"pending\">pending</option>\r\n                <option value=\"processing\">processing</option>\r\n                <option value=\"warehouse\">warehouse</option>\r\n                <option value=\"placed\">placed</option>\r\n                <option value=\"cancelled\">cancelled</option>\r\n                </select> \r\n            </div>\r\n\r\n        <div className='p-4'>\r\n            <div className='flex gap-2 text-lg text-[#d0d2d6]'>\r\n            <h2>#{order._id}</h2>\r\n            <span>{order.date}</span> \r\n            </div>\r\n            \r\n            <div className='flex flex-wrap'>\r\n                <div className='w-[30%]'>\r\n                    <div className='pr-3 text-[#d0d2d6] text-lg'>\r\n                        <div className='flex flex-col gap-1'>\r\n                        <h2 className='pb-2 font-semibold'>Deliver To : {order.shippingInfo} </h2>\r\n                             \r\n                        </div>\r\n            <div className='flex justify-start items-center gap-3'>\r\n                <h2>Payment Status: </h2>\r\n                <span className='text-base'>{order.payment_status}</span>\r\n             </div>  \r\n             <span>Price : {order.price} TND</span> \r\n             {\r\n  order?.products?.map((p, i) => (\r\n    <div key={i} className='mt-4 flex flex-col gap-4 bg-[#8288ed] rounded-md p-3'>\r\n      <div className='text-[#d0d2d6] flex gap-5'>\r\n        {/* Augmentation de la taille de l'image */}\r\n        <img className='w-[100px] h-[100px] object-cover' src={p.images[0]} alt=\"\" />\r\n        <div>\r\n          <h2 className='text-lg font-semibold'>{p.name}</h2>\r\n          <p>\r\n            <span className='font-bold'>Brand: </span>\r\n            <span>{p.brand}</span>\r\n          </p>\r\n          {/* Affichage de la quantit√© sur une ligne distincte */}\r\n          <p>\r\n            <span className='font-bold'>Quantity: </span>\r\n            <span>{p.quantity}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ))\r\n}\r\n\r\n\r\n\r\n\r\n                \r\n\r\n\r\n\r\n                    </div>\r\n                </div> \r\n\r\n           \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>   \r\n        </div> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderDetails;"],"names":["OrderDetails","_order$products","orderId","useParams","dispatch","useDispatch","status","setStatus","useState","order","errorMessage","successMessage","useSelector","state","useEffect","delivery_status","get_seller_order","toast","success","messageClear","error","_jsx","className","children","_jsxs","onChange","e","newStatus","target","value","seller_order_status_update","info","name","id","_id","date","shippingInfo","payment_status","price","products","map","p","i","src","images","alt","brand","quantity"],"sourceRoot":""}