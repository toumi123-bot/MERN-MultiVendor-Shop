{"version":3,"file":"static/js/868.16b64ca8.chunk.js","mappings":"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","sources":["views/admin/OrderDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { admin_order_status_update, decreaseProductStock, get_admin_order, increaseProductStock, messageClear } from '../../store/Reducers/OrderReducer';\r\nimport toast from 'react-hot-toast';\r\nimport { get_seller } from '../../store/Reducers/sellerReducer';\r\n\r\nconst OrderDetails = () => {\r\n    const { orderId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const [status, setStatus] = useState('');\r\n    const { order, errorMessage, successMessage } = useSelector(state => state.order);\r\n    \r\n    const [sellers, setSellers] = useState({});\r\n    const [adjustedProducts, setAdjustedProducts] = useState({});\r\n    useEffect(() => {\r\n        setStatus(order?.delivery_status);\r\n    }, [order]);\r\n\r\n    useEffect(() => {\r\n        dispatch(get_admin_order(orderId));\r\n    }, [orderId, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (order?.products) {\r\n            const sellerIds = [...new Set(order.products.map(product => product.sellerId))];\r\n    \r\n            Promise.all(sellerIds.map(id => dispatch(get_seller(id))))\r\n                .then((results) => {\r\n                    const sellerData = results.reduce((acc, action) => {\r\n                        if (action.type === \"seller/get_seller/fulfilled\") {\r\n                            const seller = action.payload.seller; // Accédez correctement à l'objet vendeur\r\n                            acc[seller._id] = seller; // Utilisez _id pour l'identifier\r\n                        }\r\n                        return acc;\r\n                    }, {});\r\n                    setSellers(sellerData);\r\n                    console.log('Sellers:', sellerData); // Vérifiez les données des vendeurs ici\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Erreur lors de la récupération des vendeurs:', error);\r\n                });\r\n        }\r\n    }, [order]);\r\n    \r\n\r\n    const status_update = (e) => {\r\n        const newStatus = e.target.value;\r\n        dispatch(admin_order_status_update({ orderId, info: { status: newStatus } }));\r\n        setStatus(newStatus);\r\n\r\n        order?.products?.forEach(product => {\r\n            const alreadyAdjusted = adjustedProducts[product._id];\r\n\r\n            if ((newStatus === 'processing' || newStatus === 'placed') && !alreadyAdjusted) {\r\n                dispatch(decreaseProductStock({ productId: product._id, quantity: product.quantity }));\r\n                setAdjustedProducts(prev => ({ ...prev, [product._id]: true }));\r\n            }\r\n\r\n            if (newStatus !== 'processing' && newStatus !== 'placed' && alreadyAdjusted) {\r\n                dispatch(increaseProductStock({ productId: product._id, quantity: product.quantity }));\r\n                setAdjustedProducts(prev => ({ ...prev, [product._id]: false }));\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (successMessage) {\r\n            toast.success(successMessage);\r\n            dispatch(messageClear());\r\n        }\r\n        if (errorMessage) {\r\n            toast.error(errorMessage);\r\n            dispatch(messageClear());\r\n        }\r\n    }, [successMessage, errorMessage, dispatch]);\r\n\r\n    return (\r\n        <div className='px-2 lg:px-7 pt-5'>\r\n            <div className='w-full p-4 bg-[#6a5fdf] rounded-md'>\r\n                <div className='flex justify-between items-center p-4'>\r\n                    <h2 className='text-xl text-[#d0d2d6]'>Order Details</h2>\r\n                    <select onChange={status_update} value={status} className='px-4 py-2 focus:border-indigo-500 outline-none bg-[#475569] border border-slate-700 rounded-md text-[#d0d2d6]'>\r\n                        <option value=\"pending\">pending</option>\r\n                        <option value=\"processing\">processing</option>\r\n                        <option value=\"warehouse\">warehouse</option>\r\n                        <option value=\"placed\">placed</option>\r\n                        <option value=\"cancelled\">cancelled</option>\r\n                    </select>\r\n                </div>\r\n                <div className='p-4'>\r\n                    <div className='flex gap-2 text-lg text-[#d0d2d6]'>\r\n                        <h2>#{order?._id}</h2>\r\n                        <span>{order?.date}</span>\r\n                    </div>\r\n                    <div className='flex flex-wrap'>\r\n    <div className='w-[30%]'>\r\n        <div className='pr-3 text-[#d0d2d6] text-lg'>\r\n            <h2 className='pb-2 font-semibold'>Deliver To: {order?.shippingInfo?.name}</h2>\r\n            <p>{order?.shippingInfo?.address} {order?.shippingInfo?.province} {order?.shippingInfo?.city} {order?.shippingInfo?.area}</p>\r\n            <div className='flex justify-start items-center gap-3'>\r\n                <h2>Payment Status:</h2>\r\n                <span className='text-base'>{order?.payment_status}</span>\r\n            </div>\r\n            <span>Price: {order?.price} TND</span>\r\n            <div className='mt-4 flex flex-col gap-4 bg-[#82888ed] rounded-md'>\r\n                <div className='text-[#d0d2d6]'>\r\n                    {order?.products?.map((p, i) => (\r\n                        <div key={i} className='flex items-center gap-3 text-md'>\r\n                            <img className='w-[70px] h-[70px]' src={p.images[0]} alt=\"\" /> {/* Augmenter la taille ici */}\r\n                            <div className='flex flex-col justify-between'> {/* Utiliser flex pour égaliser la taille */}\r\n                                <h2 className='text-lg font-medium'>{p.name}</h2> {/* Taille du texte ajustée */}\r\n                                <p className='flex items-center'>\r\n                                    <span>Brand: </span>\r\n                                    <span className='ml-1'>{p.brand}</span>\r\n                                    <span className='text-lg ml-2'>Quantity: {p.quantity}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div className='w-[70%]'>\r\n        <div className='pl-3'>\r\n            <div className='mt-4 flex flex-col bg-[#82888ed] rounded-md p-4'>\r\n                {order?.suborder?.map((o, i) => (\r\n                    <div key={i + 20} className='text-[#d0d2d6] mt-2'>\r\n                        <div className='flex justify-start items-center gap-3'>\r\n                            <h2>Suborder Status: {o.delivery_status}</h2>\r\n                        </div>\r\n                        {o.products?.map((p, j) => (\r\n                            <div key={j} className='flex items-center gap-3 text-md mt-2'>\r\n                                <img className='w-[70px] h-[70px]' src={p.images[0]} alt=\"\" /> {/* Augmenter la taille ici aussi */}\r\n                                <div className='flex flex-col justify-between'>\r\n                                    <h2 className='text-lg font-medium'>{p.name}</h2>\r\n                                    <p className='flex items-center'>\r\n                                        <span>Brand: </span>\r\n                                        <span className='ml-1'>{p.brand}</span>\r\n                                        <span className='text-lg ml-2'>Quantity: {p.quantity}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        Seller Name: {sellers[p.sellerId] ? sellers[p.sellerId].name : 'Loading...'}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OrderDetails;\r\n"],"names":["OrderDetails","_order$shippingInfo","_order$shippingInfo2","_order$shippingInfo3","_order$shippingInfo4","_order$shippingInfo5","_order$products2","_order$suborder","orderId","useParams","dispatch","useDispatch","status","setStatus","useState","order","errorMessage","successMessage","useSelector","state","sellers","setSellers","adjustedProducts","setAdjustedProducts","useEffect","delivery_status","get_admin_order","products","sellerIds","Set","map","product","sellerId","Promise","all","id","get_seller","then","results","sellerData","reduce","acc","action","type","seller","payload","_id","console","log","catch","error","toast","success","messageClear","_jsx","className","children","_jsxs","onChange","e","_order$products","newStatus","target","value","admin_order_status_update","info","forEach","alreadyAdjusted","decreaseProductStock","productId","quantity","prev","increaseProductStock","date","shippingInfo","name","address","province","city","area","payment_status","price","p","i","src","images","alt","brand","suborder","o","_o$products","j"],"sourceRoot":""}