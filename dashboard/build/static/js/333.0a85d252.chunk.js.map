{"version":3,"file":"static/js/333.0a85d252.chunk.js","mappings":"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","sources":["views/admin/ChatSeller.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { FaList } from \"react-icons/fa6\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  get_admin_message,\r\n  get_sellers,\r\n  send_message_seller_admin,\r\n  messageClear,\r\n  updateSellerMessage,\r\n} from \"../../store/Reducers/chatReducer\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { FaRegFaceGrinHearts } from \"react-icons/fa6\";\r\nimport toast from \"react-hot-toast\";\r\nimport { socket } from \"../../utils/utils\";\r\nconst ChatSeller = () => {\r\n  const scrollRef = useRef();\r\n  const [show, setShow] = useState(false);\r\n  const { sellerId } = useParams();\r\n  const [text, setText] = useState(\"\");\r\n  const [receverMessage, setReceverMessage] = useState(\"\");\r\n  const {\r\n    sellers,\r\n    activeSeller,\r\n    seller_admin_message,\r\n    currentSeller,\r\n    successMessage,\r\n  } = useSelector((state) => state.chat);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(get_sellers());\r\n  });\r\n  const send = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      send_message_seller_admin({\r\n        senderId: \"\",\r\n        receverId: sellerId,\r\n        message: text,\r\n        senderName: \"Admin Support\",\r\n      })\r\n    );\r\n    setText(\"\");\r\n  };\r\n  useEffect(() => {\r\n    if (sellerId) {\r\n      dispatch(get_admin_message(sellerId));\r\n    }\r\n  }, [sellerId]);\r\n  useEffect(() => {\r\n    if (successMessage) {\r\n      socket.emit(\r\n        \"send_message_admin_to_seller\",\r\n        seller_admin_message[seller_admin_message.length - 1]\r\n      );\r\n      dispatch(messageClear());\r\n    }\r\n  }, [successMessage]);\r\n  useEffect(() => {\r\n    socket.on(\"receved_seller_message\", (msg) => {\r\n      setReceverMessage(msg);\r\n    });\r\n  }, []);\r\n  useEffect(() => {\r\n    if (receverMessage) {\r\n      if (\r\n        receverMessage.senderId === sellerId &&\r\n        receverMessage.receverId === \"\"\r\n      ) {\r\n        dispatch(updateSellerMessage(receverMessage));\r\n      } else {\r\n        toast.success(receverMessage.senderName + \" \" + \"Send A message\");\r\n        dispatch(messageClear());\r\n      }\r\n    }\r\n  }, [receverMessage]);\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [seller_admin_message]);\r\n  return (\r\n    <div className=\"px-2 lg:px-7 py-5\">\r\n      <div className=\"w-full bg-[#6a5fdf] px-4 py-4 rounded-md h-[calc(100vh-140px)]\">\r\n        <div className=\"flex w-full h-full relative\">\r\n          <div\r\n            className={`w-[280px] h-full absolute z-10 ${\r\n              show ? \"-left-[16px]\" : \"-left-[336px]\"\r\n            } md:left-0 md:relative transition-all `}\r\n          >\r\n            <div className=\"w-full h-[calc(100vh-177px)] bg-[#9e97e9] md:bg-transparent overflow-y-auto\">\r\n              <div className=\"flex text-xl justify-between items-center p-4 md:p-0 md:px-3 md:pb-3 text-white\">\r\n                <h2>Sellers</h2>\r\n                <span\r\n                  onClick={() => setShow(!show)}\r\n                  className=\"block cursor-pointer md:hidden\"\r\n                >\r\n                  <IoMdClose />{\" \"}\r\n                </span>\r\n              </div>\r\n              {sellers.map((s, i) => (\r\n                <Link\r\n                  key={i}\r\n                  to={`/admin/dashboard/chat-sellers/${s._id}`}\r\n                  className={`h-[60px] flex justify-start gap-2 items-center text-white px-2 py-2 rounded-md cursor-pointer ${\r\n                    sellerId === s._id ? \"bg-[#8288ed]\" : \"\"\r\n                  }  `}\r\n                >\r\n                  <div className=\"relative\">\r\n                    <img\r\n                      className=\"w-[38px] h-[38px] border-white border-2 max-w-[38px] p-[2px] rounded-full\"\r\n                      src={s.image}\r\n                      alt=\"\"\r\n                    />\r\n                    {activeSeller.some((a) => a.sellerId === s._id) && (\r\n                      <div className=\"w-[10px] h-[10px] bg-green-500 rounded-full absolute right-0 bottom-0\"></div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-center items-start flex-col w-full\">\r\n                    <div className=\"flex justify-between items-center w-full\">\r\n                      <h2 className=\"text-base font-semibold\">{s.name}</h2>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"w-full md:w-[calc(100%-200px)] md:pl-4\">\r\n            <div className=\"flex justify-between items-center\">\r\n              {sellerId && (\r\n                <div className=\"flex justify-start items-center gap-3\">\r\n                  <div className=\"relative\">\r\n                    <img\r\n                      className=\"w-[45px] h-[45px] border-green-500 border-2 max-w-[45px] p-[2px] rounded-full\"\r\n                      src={currentSeller?.image}\r\n                      alt=\"\"\r\n                    />\r\n                    <div className=\"w-[10px] h-[10px] bg-green-500 rounded-full absolute right-0 bottom-0\"></div>\r\n                  </div>\r\n                  <span className=\"text-white\">{currentSeller?.name}</span>\r\n                </div>\r\n              )}\r\n\r\n              <div\r\n                onClick={() => setShow(!show)}\r\n                className=\"w-[35px] flex md:hidden h-[35px] rounded-sm bg-blue-500 shadow-lg hover:shadow-blue-500/50 justify-center cursor-pointer items-center text-white\"\r\n              >\r\n                <span>\r\n                  <FaList />{\" \"}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"py-4\">\r\n              <div className=\"bg-[#475569] h-[calc(100vh-290px)] rounded-md p-3 overflow-y-auto\">\r\n                {sellerId ? (\r\n                  seller_admin_message.map((m, i) => {\r\n                    if (m.senderId === sellerId) {\r\n                      return (\r\n                        <div\r\n                          ref={scrollRef}\r\n                          className=\"w-full flex justify-start items-center\"\r\n                        >\r\n                          <div className=\"flex justify-start items-start gap-2 md:px-3 py-2 max-w-full lg:max-w-[85%]\">\r\n                            <div>\r\n                              <img\r\n                                className=\"w-[38px] h-[38px] border-2 border-white rounded-full max-w-[38px] p-[3px]\"\r\n                                src=\"https://ambitious-desert-0d4d5481e.1.azurestaticapps.net/images/demo.jpg\"\r\n                                alt=\"\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"flex justify-center items-start flex-col w-full bg-blue-500 shadow-lg shadow-blue-500/50 text-white py-1 px-2 rounded-sm\">\r\n                              <span>{m.message} </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <div\r\n                          ref={scrollRef}\r\n                          className=\"w-full flex justify-end items-center\"\r\n                        >\r\n                          <div className=\"flex justify-start items-start gap-2 md:px-3 py-2 max-w-full lg:max-w-[85%]\">\r\n                            <div className=\"flex justify-center items-start flex-col w-full bg-red-500 shadow-lg shadow-red-500/50 text-white py-1 px-2 rounded-sm\">\r\n                              <span>{m.message} </span>\r\n                            </div>\r\n                            <div>\r\n                              <img\r\n                                className=\"w-[38px] h-[38px] border-2 border-white rounded-full max-w-[38px] p-[3px]\"\r\n                                src=\"https://ambitious-desert-0d4d5481e.1.azurestaticapps.net/images/admin.jpg\"\r\n                                alt=\"\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })\r\n                ) : (\r\n                  <div className=\"w-full h-full flex justify-center items-center flex-col gap-2 text-white\">\r\n                    <span>\r\n                      <FaRegFaceGrinHearts />\r\n                    </span>\r\n                    <span>Select Seller </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <form onSubmit={send} className=\"flex gap-3\">\r\n              <input\r\n                readOnly={sellerId ? false : true}\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                className=\"w-full flex justify-between px-2 border border-slate-700 items-center py-[5px] focus:border-blue-500 rounded-md outline-none bg-transparent text-[#d0d2d6]\"\r\n                type=\"text\"\r\n                placeholder=\"Input Your Message\"\r\n              />\r\n              <button\r\n                disabled={sellerId ? false : true}\r\n                className=\"shadow-lg bg-[#06b6d4] hover:shadow-cyan-500/50 text-semibold w-[75px] h-[35px] rounded-md text-white flex justify-center items-center\"\r\n              >\r\n                Send\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSeller;\r\n"],"names":["ChatSeller","scrollRef","useRef","show","setShow","useState","sellerId","useParams","text","setText","receverMessage","setReceverMessage","sellers","activeSeller","seller_admin_message","currentSeller","successMessage","useSelector","state","chat","dispatch","useDispatch","useEffect","get_sellers","get_admin_message","socket","emit","length","messageClear","on","msg","senderId","receverId","updateSellerMessage","toast","success","senderName","_scrollRef$current","current","scrollIntoView","behavior","_jsx","className","children","_jsxs","concat","onClick","IoMdClose","map","s","i","Link","to","_id","src","image","alt","some","a","name","FaList","m","ref","message","FaRegFaceGrinHearts","onSubmit","e","preventDefault","send_message_seller_admin","readOnly","value","onChange","target","type","placeholder","disabled"],"sourceRoot":""}